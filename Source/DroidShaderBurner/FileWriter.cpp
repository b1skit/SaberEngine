// © 2024 Adam Badke. All rights reserved.
#include "FileWriter.h"
#include "TextStrings.h"


namespace droid
{
	FileWriter::FileWriter(std::string const& outputFilepath, std::string const& outputFileName)
		: m_currentStatus(droid::ErrorCode::Success)
		, m_curIndentLevel(0)
	{
		if (!std::filesystem::exists(outputFilepath))
		{
			std::filesystem::create_directory(outputFilepath);
		}

		std::string const& combinedFilePath = std::format("{}{}", outputFilepath, outputFileName);

		m_outputStream.open(combinedFilePath);
		if (!m_outputStream.is_open())
		{
			m_currentStatus = droid::ErrorCode::FileError;
		}

		// Put the current year into the copyright notice:
		std::string autogeneratedHeader = droid::k_autogeneratedHeader;
		
		const auto now = std::chrono::system_clock::now();
		autogeneratedHeader = 
			std::regex_replace(autogeneratedHeader, std::regex("YEAR"), std::format("{:%Y}", now).c_str());

		m_outputStream << autogeneratedHeader.c_str() << "\n";
	}


	FileWriter::~FileWriter()
	{
		if (m_outputStream.is_open())
		{
			m_outputStream.close();
		}
	}


	void FileWriter::OpenNamespace(char const* namespaceName)
	{
		WriteLine(std::format("namespace {}", namespaceName));
		OpenBrace();
	}


	void FileWriter::OpenNamespace(std::string const& namespaceName)
	{
		OpenNamespace(namespaceName.c_str());
	}


	void FileWriter::CloseNamespace()
	{
		CloseBrace();
	}


	void FileWriter::EmptyLine()
	{
		m_outputStream << std::endl;
	}


	void FileWriter::WriteLine(char const* line)
	{
		for (uint8_t i = 0; i < m_curIndentLevel; ++i)
		{
			m_outputStream << "\t";
		}
		m_outputStream << line << "\n";
	}


	void FileWriter::WriteLine(std::string const& line)
	{
		WriteLine(line.c_str());
	}


	void FileWriter::Indent()
	{
		++m_curIndentLevel;
	}


	void FileWriter::Unindent()
	{
		--m_curIndentLevel;
	}


	void FileWriter::OpenBrace()
	{
		WriteLine("{");
		Indent();
	}


	void FileWriter::CloseBrace()
	{
		Unindent();
		WriteLine("}");
	}
}